import 'dart:convert';

import 'package:flexurio_erp_core/flexurio_erp_core.dart';
import 'package:flutter/material.dart';

class Configuration {
  final List<Entity> entities;
  final List<MenuGroup> menuGroups;

  Configuration({required this.entities, required this.menuGroups});

  factory Configuration.fromJson(Map<String, dynamic> json) {
    return Configuration(
      entities: (json['entity'] as List<dynamic>)
          .map((e) => Entity.fromJson(e))
          .toList(),
      menuGroups: (json['menu_group'] as List<dynamic>)
          .map((e) => MenuGroup.fromJson(e))
          .toList(),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'entity': entities.map((e) => e.toJson()).toList(),
      'menu_group': menuGroups.map((e) => e.toJson()).toList(),
    };
  }

  List<Menu1> get menu {
    return menuGroups
        .map(
          (e) => Menu1(
            label: e.label,
            menu: e.menu
                .map(
                  (e) => Menu2(
                    label: e.label,
                    icon: Icons.list,
                    menu: e.menuSub
                        .map(
                          (e) => Menu3(
                            label: e.label,
                            home: home,
                            permissions: [],
                            permission: null,
                          ),
                        )
                        .toList(),
                  ),
                )
                .toList(),
          ),
        )
        .toList();
  }
}

class Entity {
  final String id;
  final String menuGroup;
  final String menu;
  final String label;
  final List<Field> fields;
  final Backend backend;

  Entity({
    required this.id,
    required this.menuGroup,
    required this.menu,
    required this.label,
    required this.fields,
    required this.backend,
  });

  factory Entity.fromJson(Map<String, dynamic> json) {
    return Entity(
      id: json['id'],
      menuGroup: json['menu_group'],
      menu: json['menu'],
      label: json['label'],
      fields: (json['fields'] as List<dynamic>)
          .map((e) => Field.fromJson(e))
          .toList(),
      backend: Backend.fromJson(json['backend']),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'menu_group': menuGroup,
      'menu': menu,
      'label': label,
      'fields': fields.map((e) => e.toJson()).toList(),
      'backend': backend.toJson(),
    };
  }
}

class Field {
  final String label;
  final String reference;
  final String type;
  final bool? autoGenerated;
  final bool? required;
  final String? pattern;
  final int? minLength;
  final int? maxLength;
  final bool? allowCreate;
  final bool? allowUpdate;
  final FieldOptions? options;

  Field({
    required this.label,
    required this.reference,
    required this.type,
    this.autoGenerated,
    this.required,
    this.pattern,
    this.minLength,
    this.maxLength,
    this.allowCreate,
    this.allowUpdate,
    this.options,
  });

  factory Field.fromJson(Map<String, dynamic> json) {
    return Field(
      label: json['label'],
      reference: json['reference'],
      type: json['type'],
      autoGenerated: json['auto_generated'],
      required: json['required'],
      pattern: json['pattern'],
      minLength: json['min_length'],
      maxLength: json['max_length'],
      allowCreate: json['allow_create'],
      allowUpdate: json['allow_update'],
      options: json['options'] != null
          ? FieldOptions.fromJson(json['options'])
          : null,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'label': label,
      'reference': reference,
      'type': type,
      'auto_generated': autoGenerated,
      'required': required,
      'pattern': pattern,
      'min_length': minLength,
      'max_length': maxLength,
      'allow_create': allowCreate,
      'allow_update': allowUpdate,
      'options': options?.toJson(),
    };
  }
}

class FieldOptions {
  final String source;
  final String labelField;
  final String valueField;

  FieldOptions({
    required this.source,
    required this.labelField,
    required this.valueField,
  });

  factory FieldOptions.fromJson(Map<String, dynamic> json) {
    return FieldOptions(
      source: json['source'],
      labelField: json['label_field'],
      valueField: json['value_field'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'source': source,
      'label_field': labelField,
      'value_field': valueField,
    };
  }
}

class Backend {
  final BackendEndpoint readAll;
  final BackendEndpoint read;
  final BackendEndpoint create;
  final BackendEndpoint update;
  final BackendEndpoint delete;

  Backend({
    required this.readAll,
    required this.read,
    required this.create,
    required this.update,
    required this.delete,
  });

  factory Backend.fromJson(Map<String, dynamic> json) {
    return Backend(
      readAll: BackendEndpoint.fromJson(json['read_all']),
      read: BackendEndpoint.fromJson(json['read']),
      create: BackendEndpoint.fromJson(json['create']),
      update: BackendEndpoint.fromJson(json['update']),
      delete: BackendEndpoint.fromJson(json['delete']),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'read_all': readAll.toJson(),
      'read': read.toJson(),
      'create': create.toJson(),
      'update': update.toJson(),
      'delete': delete.toJson(),
    };
  }
}

class BackendEndpoint {
  final String method;
  final String url;

  BackendEndpoint({required this.method, required this.url});

  factory BackendEndpoint.fromJson(Map<String, dynamic> json) {
    return BackendEndpoint(
      method: json['method'],
      url: json['url'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'method': method,
      'url': url,
    };
  }
}

class MenuGroup {
  final String label;
  final List<Menu> menu;

  MenuGroup({required this.label, required this.menu});

  factory MenuGroup.fromJson(Map<String, dynamic> json) {
    return MenuGroup(
      label: json['label'],
      menu:
          (json['menu'] as List<dynamic>).map((e) => Menu.fromJson(e)).toList(),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'label': label,
      'menu': menu.map((e) => e.toJson()).toList(),
    };
  }
}

class Menu {
  final String label;
  final String icon;
  final List<MenuSub> menuSub;

  Menu({
    required this.label,
    required this.icon,
    required this.menuSub,
  });

  factory Menu.fromJson(Map<String, dynamic> json) {
    return Menu(
      label: json['label'],
      icon: json['icon'],
      menuSub: (json['menu_sub'] as List<dynamic>)
          .map((e) => MenuSub.fromJson(e))
          .toList(),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'label': label,
      'icon': icon,
      'menu_sub': menuSub.map((e) => e.toJson()).toList(),
    };
  }
}

class MenuSub {
  final String label;
  final String entity;

  MenuSub({required this.label, required this.entity});

  factory MenuSub.fromJson(Map<String, dynamic> json) {
    return MenuSub(
      label: json['label'],
      entity: json['entity'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'label': label,
      'entity': entity,
    };
  }
}
